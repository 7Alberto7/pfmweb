<?php

namespace MIW\DataAccessBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * GameRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GameRepository extends DocumentRepository
{
    public function findUserGames($user)
    {
        return $this->createQueryBuilder()
            ->field('admin.id')->equals($user->getId())
            ->sort('created', 'desc')
            ->getQuery()
            ->execute();
    }
    
    public function findSignupGames($user)
    {
        return $this->createQueryBuilder()
            ->field('players.$id')->equals(new \MongoId($user->getId()))
            ->getQuery()
            ->execute();
    }
    
    public function findPlayedGames($user)
    {
        $now=new \DateTime('now');
        return $this->createQueryBuilder()
            ->field('players.$id')->equals(new \MongoId($user->getId()))
            ->field('gameDate')->lte($now)
            ->getQuery()
            ->execute();
    }
    
    public function findPlayingGames($user)
    {
        $now=new \DateTime('now');
        return $this->createQueryBuilder()
            ->field('players.$id')->equals(new \MongoId($user->getId()))
            ->field('gameDate')->gte($now)
            ->getQuery()
            ->execute();
    }
    
    public function findAllByDate($valueDate)
    {
        return $this->createQueryBuilder()
           ->field('gameDate')->equals($valueDate)
           ->getQuery()
           ->execute();
    }  
    
    public function findAllBetweenDates($initDate, $endDate)
    {
        return $this->createQueryBuilder()
            ->field('gameDate')->range($initDate, $endDate)
            ->getQuery()
            ->execute();
    }  
    
}
